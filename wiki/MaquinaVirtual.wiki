#summary Ambientes de testes do MIPv6
#labels uml,kernel,mipl,radvd

= Introdução =

Para facilitar o estudo do MIPv6 se fará o uso de máquinas virtuais, devido a facilidade e rapidez para construção de ambientes de testes de rede. O trabalho utilizará a máquina virtual UML (_User Mode Linux_), pois é incorporada ao kernel e apresenta um alto desempenho em execução.

Na preparação do ambiente de teste será abordado a compilação do kernel com suporte ao MIPv6, a instalação do MIPL (_Mobile IPv6 for Linux_) uma implementação do IPv6 Móvel para o Linux, e a instalação do RADVD (_Router ADVertisement Daemon_) necessário em redes IPv6 para gerar _router advertisement_ e escutar _router solicitations_.

= UML =

O uso das máquinas virtuais UML é muito fácil, simplesmente é necessário um kernel compilado para este tipo especifico de arquitetura e um _file system_.
Reescrever e falar sobre UML...

Para os testes será utilizado um _file sytem_ baseado no [http://wiki.n3network.ch/index.php/N3_Virtual_Linux_Router N3 Virtual Linux Router], é um  pequeno e mínimo _file system_ com MIPL, RADVD e vários utilitários de rede já instalados é dedicado a testes de roteamento. Está disponível para download em [http://projfin-hmip.googlecode.com/files/n3vlr-0.11-mipv6.img.tar.bz2 n3vlr-0.11-mipv6.img]. A senha de root é xxxx, para utilizar descompacte-a:

{{{
tar jxvf n3vlr-0.11-mipv6.img.tar.bz2
}}}

Neste endereço http://uml.nagafix.co.uk/ há vários _file systems_ disponíveis para download.

Existe um pacote chamado _uml utilities_, que possui várias ferramentas que serão utilizadas no ambiente de testes. Faça o download e instale o pacote:

{{{ 
# wget http://prdownloads.sourceforge.net/user-mode-linux/uml_utilities_20040406.tar.bz2
# tar jxvf uml_utilities_20040406.tar.bz2 && cd tools
# make && make install 
}}}

Para mais informações acesse [http://user-mode-linux.sourceforge.net User-mode Linux Kernel Home Page].

= KERNEL =

Para este ambiente de testes será utilizado a versão 2.6.22.2 do kernel. Então faça o download dos códigos fontes do kernel:

{{{
# wget http://kernel.org/pub/linux/kernel/v2.6/linux-2.6.22.2.tar.bz2
# tar jxvf linux-2.6.22.2.tar.bz2
# cd linux-2.6.22.2
}}}

Como o ambiente de testes será utilizando máquinas virtuais devemos compilar o kernel para essa arquitetura:

{{{
#  export ARCH=um
}}} 

Configurando kernel:

{{{
# make defconfig
# make menuconfig
}}}

É interessante habilitar a opção _*HOSTFS*_ para as máquinas virtuais terem acesso ao _filesystem_ do _host_.
{{{
UML-specific options
-->Host filesystem [HOSTFS]
}}}

Para configurar o kernel com suporte ao MIPv6 estas são as opções mínimas que devem ser setadas, no arquivo .config:

{{{
CONFIG_EXPERIMENTAL=y
CONFIG_SYSVIPC=y
CONFIG_PROC_FS=y
CONFIG_NET=y
CONFIG_INET=y 
CONFIG_IPV6=y
CONFIG_IPV6_MIP6=y
CONFIG_XFRM=y
CONFIG_XFRM_USER=y
CONFIG_XFRM_SUB_POLICY=y
CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=y
}}}

O _home agent_ e o nó móvel precisam:
{{{
CONFIG_IPV6_TUNNEL=y
CONFIG_IPV6_MULTIPLE_TABLES=y

}}}

O nó móvel também precisa:
{{{
CONFIG_IPV6_SUBTREES=y
}}}

Para alguns indicadores de movimento do nó móvel, pode ser setado:
{{{
CONFIG_ARPD=y
}}}

Para suporte ao IPsec é necessário pelo menos:
{{{
CONFIG_INET6_ESP=y
}}}

Para utilizar IPsec nos túneis:
{{{
CONFIG_NET_KEY=y
CONFIG_NET_KEY_MIGRATE=y
}}}

Para configurar no menu estas são as opções:
{{{
Code maturity level options
--> Prompt for development and/or incomplete code/drivers [CONFIG_EXPERIMENTAL]

General setup 
--> System V IPC [CONFIG_SYSVIPC]

Networking
--> Networking support [CONFIG_NET]
--> Networking options
    --> Transformation user configuration interface [CONFIG_XFRM_USER]
    --> Transformation sub policy support [CONFIG_XFRM_SUB_POLICY]
    --> Transformation migrate database [CONFIG_XFRM_MIGRATE]
    --> PF_KEY sockets [CONFIG_NET_KEY]
    --> PF_KEY MIGRATE [CONFIG_NET_KEY_MIGRATE]
    --> TCP/IP networking [CONFIG_INET]
    --> The IPv6 protocol [CONFIG_IPV6]
    --> IPv6: AH transformation [CONFIG_INET6_AH]
    --> IPv6: ESP transformation [CONFIG_INET6_ESP]
    --> IPv6: IPComp transformation [CONFIG_INET6_IPCOMP]
    --> IPv6: Mobility [CONFIG_IPV6_MIP6]
    --> IPv6: IPsec transport mode [CONFIG_INET6_XFRM_MODE_TRANSPORT]
    --> IPv6: IPsec tunnel mode [CONFIG_INET6_XFRM_MODE_TUNNEL]
    --> IPv6: MIPv6 route optimization mode [CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION]
    --> IPv6: IPv6-in-IPv6 tunnel [CONFIG_IPV6_TUNNEL]
    --> IPv6: Multiple Routing Tables [CONFIG_IPV6_MULTIPLE_TABLES]
    --> IPv6: source address based routing [CONFIG_IPV6_SUBTREES]
File systems
--> Pseudo filesystems
    --> /proc file system support [CONFIG_PROC_FS]
}}}
Para verificar se o kernel está configurado corretamente para ter suporte ao MIPv6 existe um shell script _*chkconf_kernel.sh*_ que acompanha o pacote do MIPL.

Após configurado o kernel deve ser compilado, os seus módulos serão instalados no diretório uml-modules para depois serem copiados para o _filesystem_ da máquina virtual.
{{{
# make
# strip linux
# make modules_install INSTALL_MOD_PATH=uml-modules
# unset arch
}}}

Como se faz uso de máquinas virtuais é necessário copiar os módulos para o _filesystem_ que será utilizado. Para isso:
{{{
# mkdir loop
# mount -o loop <seu_fs> loop
# cp -rf linux-2.6.22.2/uml-modules/lib/modules/* loop/lib/modules
}}}
 
= MIPL =

O MIPL (_Mobile IPv6 for Linux_) é uma implementação de Suporte a Mobilidade no IPv6 (RFC 3775), desenvolvida na Universidade Tecnólogica de Helsinki. É um programa em _user space_ que trabalha junto com MIPv6 habilitado no kernel.

Faça o download da ultima versão estável do MIPL:
{{{
# wget ftp://ftp.linux-ipv6.org/pub/usagi/patch/mipv6/umip-0.4/daemon/tarball/mipv6-daemon-umip-0.4.tar.gz
# tar xvzf mipv6-daemon-umip-0.4.tar.gz && cd mipv6-daemon-umip-0.4
}}}

O MIPL será configurado para usar os _headers_ do kernel 2.6.22.2, ser instalado no _filesystem_ da maquina virtual e habilitar um terminal virtual para acessar o MIPL em tempo de execução:
{{{
# CPPFLAGS='-isystem ../linux-2.6.22.2/include' ./configure --prefix=../loop/usr --enable-vt 
}}}

Compilando e instalando:
{{{
# make
# make install
}}}

= RADVD =

O RADVD (_Router ADVertisement Daemon_)é um serviço para roteadores IPv6. Ele envia mensagens _Router Advertisement_ e responde a _Router Solicitation_ especificadas na RFC 2641. Essas mensagens são utilizadas para _stateless autoconfiguration_. Faça o donwload do pacote:
{{{
# wget http://www.litech.org/radvd/dist/radvd-1.1.tar.gz
# tar xvzf radvd-1.1.tar.gz && cd radvd-1.1
}}}